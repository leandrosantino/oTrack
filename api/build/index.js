import "reflect-metadata";
function _ts_decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r}function _ts_metadata(k,v){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v)}function _ts_param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}}import{injectable}from"tsyringe";import jwt from"jsonwebtoken";class AuthService{secret="0d05310c-3bcb-48b8-bd7d-b0feef9769f6";toeknExpires="1 days";signIn({username,password}){console.log("signIn");const tokenData={uid:"",username:"leandro",permissions:["ADMIN"]};const token=jwt.sign(tokenData,this.secret,{expiresIn:this.toeknExpires});return token}verifiyToken(token){throw new Error("Method not implemented.")}}AuthService=_ts_decorate([injectable()],AuthService);import Elysia,{t}from"elysia";import{inject,injectable as injectable1}from"tsyringe";class AuthController{authService;authMiddleware;constructor(authService,authMiddleware){this.authService=authService;this.authMiddleware=authMiddleware;this.bodySchema=t.Object({username:t.String(),password:t.String()})}bodySchema;build(){return new Elysia().use(this.authMiddleware.build()).post("/signin",({body,bearer})=>{console.log(bearer);return this.authService.signIn(body)},{body:this.bodySchema})}}AuthController=_ts_decorate([injectable1(),_ts_param(0,inject("AuthService")),_ts_param(1,inject("AuthMiddleware")),_ts_metadata("design:type",Function),_ts_metadata("design:paramtypes",[void 0,void 0])],AuthController);import Elysia1 from"elysia";import{injectable as injectable2}from"tsyringe";class AuthMiddleware{build(){return new Elysia1().derive({as:"global"},({headers})=>{const auth=headers["authorization"];return{bearer:auth?.startsWith("Bearer ")?auth.slice(7):null}}).get("/plugin",({bearer})=>bearer)}}AuthMiddleware=_ts_decorate([injectable2()],AuthMiddleware);import{container}from"tsyringe";container.register("AuthService",AuthService);container.register("AuthMiddleware",AuthMiddleware);const authController=container.resolve(AuthController);import"reflect-metadata";import{Elysia as Elysia2}from"elysia";import{node}from"@elysiajs/node";new Elysia2({adapter:node()}).use(authController.build()).listen(3e3,({hostname,port})=>{console.log(`ðŸ¦Š Elysia is running at ${hostname}:${port}`)});