{"version":3,"sources":["\\\\?\\C:\\Dev\\portalFacility\\api\\src\\services\\AuthService\\AuthService.ts","\\\\?\\C:\\Dev\\portalFacility\\api\\src\\controllers\\AuthController.ts","\\\\?\\C:\\Dev\\portalFacility\\api\\src\\middlewares\\AuthMiddleware.ts","\\\\?\\C:\\Dev\\portalFacility\\api\\src\\factory.ts","\\\\?\\C:\\Dev\\portalFacility\\api\\src\\index.ts"],"sourcesContent":["import { container, injectable, singleton } from \"tsyringe\";\r\nimport { IAuthService } from \"./IAuthService\";\r\nimport { AuthRequestDTO, JwtToken, TokenData } from \"./IAuthServiceDTO\";\r\nimport jwt, { type SignOptions, type VerifyOptions } from 'jsonwebtoken'\r\n\r\n@injectable()\r\nexport class AuthService implements IAuthService {\r\n\r\n  private readonly secret = '0d05310c-3bcb-48b8-bd7d-b0feef9769f6'\r\n  private readonly toeknExpires = '1 days'\r\n\r\n  signIn({ username, password }: AuthRequestDTO) {\r\n    console.log('signIn')\r\n\r\n    const tokenData: TokenData = {\r\n      uid: '',\r\n      username: 'leandro',\r\n      permissions: ['ADMIN']\r\n    }\r\n\r\n    const token = jwt.sign(tokenData, this.secret, {\r\n      expiresIn: this.toeknExpires\r\n    })\r\n\r\n    return token\r\n  }\r\n\r\n  verifiyToken(token: JwtToken): TokenData {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n}\r\n","import Elysia, { t } from \"elysia\";\r\nimport { authController } from \"factory\";\r\nimport { AuthMiddleware } from \"middlewares/AuthMiddleware\";\r\nimport { IAuthService } from \"services/AuthService/IAuthService\";\r\nimport { inject, injectable } from \"tsyringe\";\r\n\r\n@injectable()\r\nexport class AuthController {\r\n\r\n  constructor(\r\n    @inject('AuthService') private readonly authService: IAuthService,\r\n    @inject('AuthMiddleware') private readonly authMiddleware: AuthMiddleware,\r\n  ) { }\r\n\r\n  private bodySchema = t.Object({\r\n    username: t.String(),\r\n    password: t.String()\r\n  })\r\n\r\n  build() {\r\n    return new Elysia()\r\n      .use(this.authMiddleware.build())\r\n      .post('/signin', ({ body, bearer }) => {\r\n        console.log(bearer)\r\n        return this.authService.signIn(body)\r\n      }, { body: this.bodySchema })\r\n  }\r\n\r\n}\r\n","import Elysia from \"elysia\";\r\nimport { injectable } from \"tsyringe\";\r\n\r\n\r\n@injectable()\r\nexport class AuthMiddleware {\r\n\r\n  build() {\r\n    return new Elysia()\r\n      .derive({ as: 'global' }, ({ headers }) => {\r\n        const auth = headers['authorization']\r\n        return {\r\n          bearer: auth?.startsWith('Bearer ') ? auth.slice(7) : null\r\n        }\r\n      })\r\n      .get('/plugin', ({ bearer }) => bearer)\r\n  }\r\n\r\n}\r\n","import { container } from \"tsyringe\";\r\nimport { AuthService } from \"./services/AuthService/AuthService\";\r\nimport { AuthController } from \"controllers/AuthController\";\r\nimport { AuthMiddleware } from \"middlewares/AuthMiddleware\";\r\n\r\ncontainer.register('AuthService', AuthService)\r\ncontainer.register('AuthMiddleware', AuthMiddleware)\r\n\r\nexport const authController = container.resolve(AuthController)\r\n","import \"reflect-metadata\";\r\n\r\nimport { Elysia } from 'elysia'\r\nimport { node } from '@elysiajs/node'\r\nimport { authController } from \"factory\";\r\n\r\nconst app = new Elysia({ adapter: node() })\r\n  .use(authController.build())\r\n  .listen(3000, ({ hostname, port }) => {\r\n    console.log(\r\n      `ðŸ¦Š Elysia is running at ${hostname}:${port}`\r\n    )\r\n  })\r\n\r\nexport type App = typeof app\r\n"],"names":[],"mappings":"opBAAA,OAAoB,UAAU,KAAmB,UAAW,AAG5D,QAAO,QAAmD,cAAc,AAGjE,OAAM,YAEX,AAAiB,OAAS,sCAAsC,AAChE,CAAiB,aAAe,QAAQ,AAExC,CAAA,OAAO,CAAE,QAAQ,CAAE,QAAQ,CAAkB,CAAE,CAC7C,QAAQ,GAAG,CAAC,UAEZ,MAAM,UAAuB,CAC3B,IAAK,GACL,SAAU,UACV,YAAa,CAAC,QAAQ,AACxB,EAEA,MAAM,MAAQ,IAAI,IAAI,CAAC,UAAW,IAAI,CAAC,MAAM,CAAE,CAC7C,UAAW,IAAI,CAAC,YAAY,AAC9B,GAEA,OAAO,KACT,CAEA,aAAa,KAAe,CAAa,CACvC,MAAM,IAAI,MAAM,0BAClB,CAEF,qDC/BA,QAAO,QAAU,CAAC,KAAQ,QAAS,AAInC,QAAS,MAAM,CAAE,cAAA,WAAU,KAAQ,UAAW,AAGvC,OAAM,yCAEX,aACE,AAAwC,WAAyB,CACjE,AAA2C,cAA8B,CACzE,MAFwC,YAAA,iBACG,eAAA,oBAGrC,WAAa,EAAE,MAAM,CAAC,CAC5B,SAAU,EAAE,MAAM,GAClB,SAAU,EAAE,MAAM,EACpB,EALI,CAEJ,AAAQ,UAGN,AAEF,CAAA,OAAQ,CACN,OAAO,IAAI,SACR,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,IAC7B,IAAI,CAAC,UAAW,CAAC,CAAE,IAAI,CAAE,MAAM,CAAE,IAChC,QAAQ,GAAG,CAAC,QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KACjC,EAAG,CAAE,KAAM,IAAI,CAAC,UAAU,AAAC,EAC/B,CAEF,4NC5BA,QAAO,YAAY,QAAS,AAC5B,QAAS,cAAA,WAAU,KAAQ,UAAW,AAI/B,OAAM,eAEX,OAAQ,CACN,OAAO,IAAI,UACR,MAAM,CAAC,CAAE,GAAI,QAAS,EAAG,CAAC,CAAE,OAAO,CAAE,IACpC,MAAM,KAAO,OAAO,CAAC,gBAAgB,CACrC,MAAO,CACL,OAAQ,MAAM,WAAW,WAAa,KAAK,KAAK,CAAC,GAAK,IACxD,CACF,GACC,GAAG,CAAC,UAAW,CAAC,CAAE,MAAM,CAAE,GAAK,OACpC,CAEF,4DClBA,QAAS,SAAS,KAAQ,UAAW,CAKrC,UAAU,QAAQ,CAAC,2BACnB,UAAU,QAAQ,CAAC,iCAEZ,MAAM,eAAiB,UAAU,OAAO,gBCR/C,OAAO,kBAAmB,AAE1B,QAAS,UAAA,OAAM,KAAQ,QAAQ,AAC/B,QAAS,IAAI,KAAQ,gBAAgB,CAGzB,IAAI,QAAO,CAAE,QAAS,MAAO,GACtC,GAAG,CAAC,eAAe,KAAK,IACxB,MAAM,CAAC,IAAM,CAAC,CAAE,QAAQ,CAAE,IAAI,CAAE,IAC/B,QAAQ,GAAG,CACT,CAAC,wBAAwB,EAAE,SAAS,CAAC,EAAE,KAAK,CAAC,CAEjD"}